name: Frontend CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-deploy:
    name: Build and Deploy Frontend to Server
    runs-on: ubuntu-latest

    env:
      PROJECT_DIR: /home/joo/front-end-coffee  # 서버에 배포될 프론트엔드 경로

    steps:
      # 1. 리포지토리 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2. Node.js 설정
      - name: Set up Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3. 종속성 설치
      - name: Install dependencies
        run: |
          npm install

      # 4. 빌드
      - name: Build project
        run: |
          npm run build

      # 5. 서버에 배포 (SSH 접속)
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/joo/Front-end-coffee
            git config pull.rebase false
            git pull origin main
            # 빌드 결과물을 dist로 복사
            rm -rf /home/joo/front-end-coffee/dist
            cp -r ./dist /home/joo/front-end-coffee/dist
            # Docker Compose로 컨테이너 재시작
            echo ${{ secrets.SUDO_PASSWORD }} | sudo -S docker-compose down
            echo ${{ secrets.SUDO_PASSWORD }} | sudo -S docker-compose up -d --build

      # 6. Nginx 서비스 재시작
      - name: Restart Nginx
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/joo/Front-end-coffee
            echo ${{ secrets.SUDO_PASSWORD }} | sudo -S docker-compose restart frontend-nginx
